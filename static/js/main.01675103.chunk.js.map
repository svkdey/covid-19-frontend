{"version":3,"sources":["utils.js","components/switch/ToolTip.js","components/MapComponent.js","components/switch/Switch.js","components/partials/Header.js","components/List.js","components/BarGraph.js","components/Loading.js","App.js","actions/corona_data_actions.js","reducers/corona_data_reducer.js","reducers/tweet_reducer.js","reducers/index.js","index.js"],"names":["groupByID","list","key","groupedMap","reduce","result","item","i","sum","sumList","forEach","latestTotal","ToolTip","console","log","this","props","class","deathData","state","country","confirmData","recoverData","Component","MapComponent","points","map","point","latitude","lat","longitude","lon","offsetLeft","offsetTop","className","findByDataByLocation","data","confirm","recovery","obj","death","mapboxApiAccessToken","process","width","height","onViewportChange","viewport","setState","zoom","pointsOnMap","Header","href","aria-hidden","List","nameClass","style","color","highlightColor","type","element","fetchListData","BarGraph","labels","push","lebelesAndData","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","Laoding","App","loading","dispatch","payload","axios","get","then","res","catch","err","groupByconfirmCase","groupBydeathCase","groupByrecoveryCase","Loading","Object","entries","sort","a","b","sumOfObject","slice","React","connect","ownProps","coronaData","initialCoronaData","initialTweets","rootReducer","combineReducers","action","tweets","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.01675103.chunk.js","sourcesContent":["function isEmpty(obj) {\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nconst groupBy = (items, key) =>\r\n  items.reduce(\r\n    (result, item) => ({\r\n      ...result,\r\n      [item[key]]: [...(result[item[key]] || []), item]\r\n    }),\r\n    {}\r\n  );\r\nfunction groupByID(list) {\r\n  var groupedMap = list ? groupBy(list, \"country\") : [];\r\n  var result = {};\r\n  for (var i in groupedMap) {\r\n    var sum = sumList(groupedMap[i]);\r\n    result[i] = sum;\r\n  }\r\n  return result;\r\n}\r\nfunction sumList(list) {\r\n  var sum = 0;\r\n  list.forEach(i => {\r\n    sum += i.latestTotal;\r\n  });\r\n  return sum;\r\n}\r\n\r\nexport { isEmpty, groupBy, groupByID, sumList };\r\n","import React, { Component } from \"react\";\r\n\r\nclass ToolTip extends Component {\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div class=\"tooltiptext \">\r\n        <div>\r\n          Place :{this.props.deathData.state}\r\n          {this.props.deathData.country && this.props.deathData.state\r\n            ? \",\"\r\n            : \"\"}\r\n        </div>\r\n        <div>{this.props.deathData.country}</div>\r\n        <div>Confirm: {this.props.confirmData}</div>\r\n        <div>Deaths: {this.props.deathData.latestTotal}</div>\r\n        <div>Recovered: {this.props.recoverData}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ToolTip;\r\n","import React, { Component } from \"react\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\nimport ToolTip from \"./switch/ToolTip\";\r\n\r\nclass MapComponent extends Component {\r\n  pointsOnMap(points) {\r\n    return points.map((point, key) => {\r\n      return (\r\n        <Marker\r\n          // className=\"mark\"\r\n          key={key}\r\n          latitude={point.lat}\r\n          longitude={point.lon}\r\n          offsetLeft={-20}\r\n          offsetTop={-10}\r\n        >\r\n          <div className=\"tooltip mark\">\r\n            <ToolTip\r\n              deathData={point}\r\n              confirmData={this.findByDataByLocation(\r\n                this.props.data.confirm,\r\n                point.lat,\r\n                point.lon\r\n              )}\r\n              recoverData={this.findByDataByLocation(\r\n                this.props.data.recovery,\r\n                point.lat,\r\n                point.lon\r\n              )}\r\n            />\r\n          </div>\r\n        </Marker>\r\n      );\r\n    });\r\n  }\r\n  findByDataByLocation(obj, lat, lon) {\r\n    for (var i in obj) {\r\n      if (obj[i].lat === lat && obj[i].lon === lon) {\r\n        return obj[i].latestTotal;\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    var points = this.props.data.death;\r\n    return (\r\n      <ReactMapGL\r\n        mapboxApiAccessToken={process.env.REACT_APP_API_GRAPH}\r\n        latitude={10}\r\n        longitude={30}\r\n        width=\"100%\"\r\n        height=\"95%\"\r\n        onViewportChange={viewport => this.setState({ viewport })}\r\n        zoom={0.5}\r\n      >\r\n        {points ? this.pointsOnMap(points) : null}\r\n      </ReactMapGL>\r\n    );\r\n  }\r\n}\r\nexport default MapComponent;\r\n","import React, { Component } from \"react\";\r\nimport Switch from \"react-switch\";\r\n\r\nexport default class SwitchComponent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { checked: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(checked) {\r\n    this.setState({ checked });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label>\r\n        <Switch onChange={this.handleChange} checked={this.state.checked} />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SwitchComponent from \"../switch/Switch\";\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"header-container-left\">COVID-19 Dashboard</div>\r\n      <div className=\"header-container-right\">\r\n        <a href=\"https://github.com/svkdey/covid-19-frontend\">\r\n          <i class=\"fa fa-github fa-2x\" aria-hidden=\"true\"></i>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function List(props) {\r\n  const fetchListData = () => {\r\n    if (props.data) {\r\n      return props.data.map((element, key) => {\r\n        return (\r\n          <div className=\"data-wrapper\" key={key}>\r\n            <div className=\"data-wrapper-left\">{element[0]}</div>\r\n            <div className=\"data-wrapper-right\">{element[1]}</div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className={props.nameClass}>\r\n      <div className=\"total-result\">\r\n        Total <span style={{ color: props.highlightColor }}>{props.type}</span>{\" \"}\r\n        case : {props.sum}\r\n      </div>\r\n      <div className=\"scroller\" style={{ height: props.height }}>\r\n        {fetchListData()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { HorizontalBar } from \"react-chartjs-2\";\r\n\r\nclass BarGraph extends Component {\r\n  lebelesAndData(list) {\r\n    var labels = [];\r\n    var data = [];\r\n    list.forEach(element => {\r\n      labels.push(element[0]);\r\n      data.push(element[1]);\r\n    });\r\n    return { labels, data };\r\n  }\r\n  render() {\r\n    var { labels, data } = this.lebelesAndData(this.props.data);\r\n    var data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: this.props.label,\r\n          backgroundColor: this.props.backgroundColor,\r\n          borderColor: this.props.borderColor,\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: this.props.hoverBackgroundColor,\r\n          hoverBorderColor: this.props.hoverBorderColor,\r\n          data: data\r\n        }\r\n      ]\r\n    };\r\n    return (\r\n      <div className=\"graph\">\r\n        {/* <h5>Bar Example (custom size)</h5> */}\r\n        <HorizontalBar data={data} height={260} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Laoding = props => {\r\n  return <ReactLoading type={props.type} color={props.color} />;\r\n};\r\n\r\nexport default Laoding;\r\n","import React from \"react\";\n\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport {\n  deathCases,\n  confirmCases,\n  recoveryCases\n} from \"./actions/corona_data_actions\";\nimport _ from \"lodash\";\nimport { isEmpty, groupByID } from \"./utils\";\nimport MapComponent from \"./components/MapComponent\";\nimport Header from \"./components/partials/Header\";\nimport List from \"./components/List\";\nimport BarGraph from \"./components/BarGraph\";\nimport Loading from \"./components/Loading\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(deathCases());\n    this.props.dispatch(confirmCases());\n    this.props.dispatch(recoveryCases());\n    this.setState({ loading: false });\n  }\n  sumOfObject(obj) {\n    var sum = 0;\n    if (obj) {\n      for (var i in obj) {\n        sum += obj[i];\n      }\n    }\n    return sum;\n  }\n  render() {\n    var deathData = this.props;\n    var groupByconfirmCase = groupByID(this.props.confirm);\n    var groupBydeathCase = groupByID(this.props.death);\n    var groupByrecoveryCase = groupByID(this.props.recovery);\n    if (this.state.loading)\n      return (\n        <div>\n          <Loading type=\"Bars\" color=\"red\" />\n          <h1>Loading</h1>\n        </div>\n      );\n    else {\n      return (\n        <div>\n          <div>\n            <Header />\n          </div>\n          <div className=\"container\">\n            <div className=\"left-20\">\n              <List\n                nameClass=\"h-2\"\n                type={\"Comfirmed\"}\n                data={Object.entries(groupByconfirmCase).sort(\n                  (a, b) => b[1] - a[1]\n                )}\n                sum={this.sumOfObject(groupByconfirmCase)}\n                height=\"82vh\"\n                highlightColor={\"blue\"}\n              />\n            </div>\n            <div className=\"mid-60\">\n              <div className=\"upper-60\">\n                <MapComponent data={deathData} />\n              </div>\n              <div className=\"lower-40\">\n                <BarGraph\n                  type={\"bar\"}\n                  data={Object.entries(groupByconfirmCase)\n                    .sort((a, b) => b[1] - a[1])\n                    .slice(0, 10)}\n                  label=\"Confirm Cases\"\n                  backgroundColor=\"rgba(15, 0, 186,1)\"\n                  borderColor=\"rgba(15, 0, 186,1)\"\n                  hoverBackgroundColor=\"rgba(15, 0, 186,1)\"\n                  hoverBorderColor=\"rgba(15, 0, 186,1)\"\n                />\n                <BarGraph\n                  type={\"bar\"}\n                  data={Object.entries(groupBydeathCase)\n                    .sort((a, b) => b[1] - a[1])\n                    .slice(0, 15)}\n                  label=\"Death Cases\"\n                  backgroundColor=\"rgba(186, 0, 0,1)\"\n                  borderColor=\"rgba(186, 0, 0,1)\"\n                  hoverBackgroundColor=\"rgba(186, 0, 0,1)\"\n                  hoverBorderColor=\"rgba(186, 0, 0,1)\"\n                />\n                <BarGraph\n                  type={\"bar\"}\n                  data={Object.entries(groupByrecoveryCase)\n                    .sort((a, b) => b[1] - a[1])\n                    .slice(0, 15)}\n                  label=\"Recovered Cases\"\n                  backgroundColor=\"rgba(54, 204, 51,1)\"\n                  borderColor=\"rgba(54, 204, 51,1)\"\n                  hoverBackgroundColor=\"rgba(54, 204, 51,0.4)\"\n                  hoverBorderColor=\"rgba(54, 204, 51,1)\"\n                />\n                {/* <BarGraph type={\"line\"} /> */}\n              </div>\n            </div>\n            <div className=\"right-20\">\n              <List\n                nameClass=\"h-1\"\n                type={\"Death\"}\n                data={Object.entries(groupBydeathCase).sort(\n                  (a, b) => b[1] - a[1]\n                )}\n                sum={this.sumOfObject(groupBydeathCase)}\n                height=\"36vh\"\n                highlightColor={\"red\"}\n              />\n              <List\n                nameClass=\"h-1\"\n                type={\"Recovered\"}\n                data={Object.entries(groupByrecoveryCase).sort(\n                  (a, b) => b[1] - a[1]\n                )}\n                sum={this.sumOfObject(groupByrecoveryCase)}\n                height=\"36vh\"\n                highlightColor={\"green\"}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  return {\n    death: state.coronaData.death,\n    confirm: state.coronaData.confirm,\n    recovery: state.coronaData.recovery\n  };\n};\nexport default connect(mapStateToProps)(App);\n","import axios from \"axios\";\r\nvar url = process.env.REACT_APP_API_URL;\r\nexport function deathCases() {\r\n  console.log(url);\r\n  var request = axios\r\n    .get(\"corona-data-death\")\r\n    .then(res => {\r\n      // console.log(res);\r\n      // var groupedData = groupBy(res.data, data => data.country);\r\n      // console.log(groupedData);\r\n      return res.data;\r\n    })\r\n    .catch(err => console.log(err));\r\n  return {\r\n    type: \"DEATH_CASES\",\r\n    payload: request\r\n  };\r\n}\r\nexport function confirmCases() {\r\n  var request = axios\r\n    .get(\"corona-data-confirm\")\r\n    .then(res => {\r\n      // console.log(res);\r\n      // var groupedData = groupBy(res.data, data => data.country);\r\n      // console.log(groupedData);\r\n      return res.data;\r\n    })\r\n    .catch(err => console.log(err));\r\n  return {\r\n    type: \"CONFIRM_CASES\",\r\n    payload: request\r\n  };\r\n}\r\nexport function recoveryCases() {\r\n  var request = axios\r\n    .get(\"corona-data-recover\")\r\n    .then(res => {\r\n      // console.log(res);\r\n      // var groupedData = groupBy(res.data, data => data.country);\r\n      // console.log(groupedData);\r\n      return res.data;\r\n    })\r\n    .catch(err => console.log(err));\r\n  return {\r\n    type: \"RECOVERY_CASES\",\r\n    payload: request\r\n  };\r\n}\r\n","const initialCoronaData = {};\r\nexport default function(state = initialCoronaData, action) {\r\n  // console.log(action);\r\n  switch (action.type) {\r\n    case \"DEATH_CASES\":\r\n      return { ...state, death: action.payload };\r\n    case \"CONFIRM_CASES\":\r\n      return { ...state, confirm: action.payload };\r\n    case \"RECOVERY_CASES\":\r\n      return { ...state, recovery: action.payload };\r\n    // case \"TIMELINE\":\r\n    //   return { ...state, timeline: action.payload };\r\n    // case \"DEATHREPORT\":\r\n    //   return { ...state, deathReport: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// import { CONFIRMED_CASE } from \"../actions/types.js\";\r\nconst initialTweets = {};\r\nexport default function(state = initialTweets, action) {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport coronaData from \"./corona_data_reducer\";\r\nimport tweets from \"./tweet_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  coronaData,\r\n  tweets\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport reducer from \"./reducers\";\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  ReduxThunk\n)(createStore);\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}