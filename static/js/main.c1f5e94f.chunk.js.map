{"version":3,"sources":["utils.js","components/switch/Switch.js","components/partials/Header.js","components/List.js","components/BarGraph.js","components/Loading.js","components/Icon.js","components/MapGraph.js","App.js","actions/corona_data_actions.js","reducers/corona_data_reducer.js","reducers/tweet_reducer.js","reducers/index.js","index.js","loc.svg"],"names":["groupByID","list","key","groupedMap","reduce","result","item","i","sum","sumList","forEach","latestTotal","Component","Header","className","href","class","aria-hidden","List","props","nameClass","style","color","highlightColor","type","height","data","map","element","fetchListData","BarGraph","labels","push","this","lebelesAndData","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","Laoding","iconPerson","L","Icon","iconUrl","require","iconRetinaUrl","MapGraph","fetchMarker","points","point","Marker","icon","position","lat","lon","Popup","state","country","findByDataByLocation","confirm","death","recovery","lng","zoom","obj","console","log","Map","center","TileLayer","attribution","url","React","App","loading","dispatch","process","payload","axios","get","then","res","catch","err","setState","deathData","groupByconfirmCase","groupBydeathCase","groupByrecoveryCase","Loading","Object","entries","sort","a","b","sumOfObject","slice","connect","ownProps","coronaData","initialCoronaData","initialTweets","rootReducer","combineReducers","action","tweets","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c1f5e94f.chunk.js","sourcesContent":["function isEmpty(obj) {\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nconst groupBy = (items, key) =>\r\n  items.reduce(\r\n    (result, item) => ({\r\n      ...result,\r\n      [item[key]]: [...(result[item[key]] || []), item]\r\n    }),\r\n    {}\r\n  );\r\nfunction groupByID(list) {\r\n  var groupedMap = list ? groupBy(list, \"country\") : [];\r\n  var result = {};\r\n  for (var i in groupedMap) {\r\n    var sum = sumList(groupedMap[i]);\r\n    result[i] = sum;\r\n  }\r\n  return result;\r\n}\r\nfunction sumList(list) {\r\n  var sum = 0;\r\n  list.forEach(i => {\r\n    sum += i.latestTotal;\r\n  });\r\n  return sum;\r\n}\r\n\r\nexport { isEmpty, groupBy, groupByID, sumList };\r\n","import React, { Component } from \"react\";\r\nimport Switch from \"react-switch\";\r\n\r\nexport default class SwitchComponent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { checked: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(checked) {\r\n    this.setState({ checked });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label>\r\n        <Switch onChange={this.handleChange} checked={this.state.checked} />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SwitchComponent from \"../switch/Switch\";\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"header-container-left\">COVID-19 Dashboard</div>\r\n      <div className=\"header-container-right\">\r\n        <a href=\"https://github.com/svkdey/covid-19-frontend\">\r\n          <i class=\"fa fa-github fa-2x\" aria-hidden=\"true\"></i>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function List(props) {\r\n  const fetchListData = () => {\r\n    if (props.data) {\r\n      return props.data.map((element, key) => {\r\n        return (\r\n          <div className=\"data-wrapper\" key={key}>\r\n            <div className=\"data-wrapper-left\">{element[0]}</div>\r\n            <div className=\"data-wrapper-right\">{element[1]}</div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className={props.nameClass}>\r\n      <div className=\"total-result\">\r\n        Total <span style={{ color: props.highlightColor }}>{props.type}</span>{\" \"}\r\n        case : {props.sum}\r\n      </div>\r\n      <div className=\"scroller\" style={{ height: props.height }}>\r\n        {fetchListData()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { HorizontalBar } from \"react-chartjs-2\";\r\n\r\nclass BarGraph extends Component {\r\n  lebelesAndData(list) {\r\n    var labels = [];\r\n    var data = [];\r\n    list.forEach(element => {\r\n      labels.push(element[0]);\r\n      data.push(element[1]);\r\n    });\r\n    return { labels, data };\r\n  }\r\n  render() {\r\n    var { labels, data } = this.lebelesAndData(this.props.data);\r\n    var data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: this.props.label,\r\n          backgroundColor: this.props.backgroundColor,\r\n          borderColor: this.props.borderColor,\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: this.props.hoverBackgroundColor,\r\n          hoverBorderColor: this.props.hoverBorderColor,\r\n          data: data\r\n        }\r\n      ]\r\n    };\r\n    return (\r\n      <div className=\"graph\">\r\n        {/* <h5>Bar Example (custom size)</h5> */}\r\n        <HorizontalBar data={data} height={260} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Laoding = props => {\r\n  return <ReactLoading type={props.type} color={props.color} />;\r\n};\r\n\r\nexport default Laoding;\r\n","import L from \"leaflet\";\r\n\r\nconst iconPerson = new L.Icon({\r\n  iconUrl: require(\"../loc.svg\"),\r\n  iconRetinaUrl: require(\"../loc.svg\"),\r\n\r\n  className: \"mark\"\r\n});\r\n\r\nexport { iconPerson };\r\n","import React from \"react\";\r\n// import L from \"leaflet\";\r\nimport { Map, TileLayer, Marker, Popup, icon } from \"react-leaflet\";\r\n// const = ReactLeaflet;\r\nimport { iconPerson } from \"./Icon\";\r\nclass MapGraph extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      lat: 0,\r\n      lng: 0,\r\n      zoom: 2\r\n    };\r\n  }\r\n\r\n  fetchMarker = points => {\r\n    return points\r\n      ? points.map(\r\n          (point, key) => (\r\n            <Marker\r\n              icon={iconPerson}\r\n              className=\"mark\"\r\n              position={[point.lat, point.lon]}\r\n              key={key}\r\n            >\r\n              <Popup>\r\n                <div className=\"state\">\r\n                  Place :{point.state}\r\n                  {point.country && point.state ? \",\" : \"\"}\r\n                </div>\r\n                {point.country}\r\n                <div className=\"confirm\">\r\n                  Confirm:\r\n                  {this.findByDataByLocation(\r\n                    this.props.data.confirm,\r\n                    point.lat,\r\n                    point.lon\r\n                  )}\r\n                </div>\r\n                <div className=\"death\">\r\n                  Deaths:\r\n                  {this.findByDataByLocation(\r\n                    this.props.data.death,\r\n                    point.lat,\r\n                    point.lon\r\n                  )}\r\n                </div>\r\n                <div className=\"recover\">\r\n                  Recovered:\r\n                  {this.findByDataByLocation(\r\n                    this.props.data.recovery,\r\n                    point.lat,\r\n                    point.lon\r\n                  )}\r\n                </div>\r\n              </Popup>\r\n            </Marker>\r\n          )\r\n          // console.log(point)\r\n        )\r\n      : \"\";\r\n  };\r\n  findByDataByLocation(obj, lat, lon) {\r\n    for (var i in obj) {\r\n      if (obj[i].lat === lat && obj[i].lon === lon) {\r\n        return obj[i].latestTotal;\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.props.data);\r\n    var points = this.props.data.death;\r\n    console.log(points);\r\n    return (\r\n      <Map center={[0, 0]} zoom={this.state.zoom}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {points ? this.fetchMarker(points) : \"\"}\r\n      </Map>\r\n    );\r\n  }\r\n}\r\nexport default MapGraph;\r\n","import React from \"react\";\n\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport {\n  deathCases,\n  confirmCases,\n  recoveryCases\n} from \"./actions/corona_data_actions\";\nimport _ from \"lodash\";\nimport { isEmpty, groupByID } from \"./utils\";\nimport Header from \"./components/partials/Header\";\nimport List from \"./components/List\";\nimport BarGraph from \"./components/BarGraph\";\nimport Loading from \"./components/Loading\";\nimport MapGraph from \"./components/MapGraph\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(deathCases());\n    this.props.dispatch(confirmCases());\n    this.props.dispatch(recoveryCases());\n    this.setState({ loading: false });\n  }\n  sumOfObject(obj) {\n    var sum = 0;\n    if (obj) {\n      for (var i in obj) {\n        sum += obj[i];\n      }\n    }\n    return sum;\n  }\n  render() {\n    var deathData = this.props;\n    var groupByconfirmCase = groupByID(this.props.confirm);\n    var groupBydeathCase = groupByID(this.props.death);\n    var groupByrecoveryCase = groupByID(this.props.recovery);\n    if (this.state.loading)\n      return (\n        <div>\n          <Loading type=\"Bars\" color=\"red\" />\n          <h1>Loading</h1>\n        </div>\n      );\n    else {\n      // <SimpleExample />;\n      return (\n        <div>\n          <div>\n            <Header />\n          </div>\n          <div className=\"container\">\n            <div className=\"left-20\">\n              <List\n                nameClass=\"h-2\"\n                type={\"Comfirmed\"}\n                data={Object.entries(groupByconfirmCase).sort(\n                  (a, b) => b[1] - a[1]\n                )}\n                sum={this.sumOfObject(groupByconfirmCase)}\n                height=\"82vh\"\n                highlightColor={\"blue\"}\n              />\n            </div>\n            <div className=\"mid-60\">\n              <div className=\"upper-60\">\n                <MapGraph data={deathData} />\n              </div>\n              <div className=\"lower-40\">\n                <BarGraph\n                  type={\"bar\"}\n                  data={Object.entries(groupByconfirmCase)\n                    .sort((a, b) => b[1] - a[1])\n                    .slice(0, 10)}\n                  label=\"Confirm Cases\"\n                  backgroundColor=\"rgba(15, 0, 186,1)\"\n                  borderColor=\"rgba(15, 0, 186,1)\"\n                  hoverBackgroundColor=\"rgba(15, 0, 186,1)\"\n                  hoverBorderColor=\"rgba(15, 0, 186,1)\"\n                />\n                <BarGraph\n                  type={\"bar\"}\n                  data={Object.entries(groupBydeathCase)\n                    .sort((a, b) => b[1] - a[1])\n                    .slice(0, 15)}\n                  label=\"Death Cases\"\n                  backgroundColor=\"rgba(186, 0, 0,1)\"\n                  borderColor=\"rgba(186, 0, 0,1)\"\n                  hoverBackgroundColor=\"rgba(186, 0, 0,1)\"\n                  hoverBorderColor=\"rgba(186, 0, 0,1)\"\n                />\n                <BarGraph\n                  type={\"bar\"}\n                  data={Object.entries(groupByrecoveryCase)\n                    .sort((a, b) => b[1] - a[1])\n                    .slice(0, 15)}\n                  label=\"Recovered Cases\"\n                  backgroundColor=\"rgba(54, 204, 51,1)\"\n                  borderColor=\"rgba(54, 204, 51,1)\"\n                  hoverBackgroundColor=\"rgba(54, 204, 51,0.4)\"\n                  hoverBorderColor=\"rgba(54, 204, 51,1)\"\n                />\n              </div>\n            </div>\n            <div className=\"right-20\">\n              <List\n                nameClass=\"h-1\"\n                type={\"Death\"}\n                data={Object.entries(groupBydeathCase).sort(\n                  (a, b) => b[1] - a[1]\n                )}\n                sum={this.sumOfObject(groupBydeathCase)}\n                height=\"36vh\"\n                highlightColor={\"red\"}\n              />\n              <List\n                nameClass=\"h-1\"\n                type={\"Recovered\"}\n                data={Object.entries(groupByrecoveryCase).sort(\n                  (a, b) => b[1] - a[1]\n                )}\n                sum={this.sumOfObject(groupByrecoveryCase)}\n                height=\"36vh\"\n                highlightColor={\"green\"}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  return {\n    death: state.coronaData.death,\n    confirm: state.coronaData.confirm,\n    recovery: state.coronaData.recovery\n  };\n};\nexport default connect(mapStateToProps)(App);\n","import axios from \"axios\";\r\nvar url = process.env.REACT_APP_API_URL;\r\nexport function deathCases() {\r\n  console.log(url);\r\n  var request = axios\r\n    .get(\r\n      \"https://cors-anywhere.herokuapp.com/http://covid19-dashboard-backend.herokuapp.com/corona-data-death\"\r\n    )\r\n    .then(res => {\r\n      // console.log(res);\r\n      // var groupedData = groupBy(res.data, data => data.country);\r\n      // console.log(groupedData);\r\n      return res.data;\r\n    })\r\n    .catch(err => console.log(err));\r\n  return {\r\n    type: \"DEATH_CASES\",\r\n    payload: request\r\n  };\r\n}\r\nexport function confirmCases() {\r\n  var request = axios\r\n    .get(\r\n      \"https://cors-anywhere.herokuapp.com/https://covid19-dashboard-backend.herokuapp.com/corona-data-confirm\"\r\n    )\r\n    .then(res => {\r\n      // console.log(res);\r\n      // var groupedData = groupBy(res.data, data => data.country);\r\n      // console.log(groupedData);\r\n      return res.data;\r\n    })\r\n    .catch(err => console.log(err));\r\n  return {\r\n    type: \"CONFIRM_CASES\",\r\n    payload: request\r\n  };\r\n}\r\nexport function recoveryCases() {\r\n  var request = axios\r\n    .get(\r\n      \"https://cors-anywhere.herokuapp.com/http://covid19-dashboard-backend.herokuapp.com/corona-data-recover\"\r\n    )\r\n    .then(res => {\r\n      // console.log(res);\r\n      // var groupedData = groupBy(res.data, data => data.country);\r\n      // console.log(groupedData);\r\n      return res.data;\r\n    })\r\n    .catch(err => console.log(err));\r\n  return {\r\n    type: \"RECOVERY_CASES\",\r\n    payload: request\r\n  };\r\n}\r\n","const initialCoronaData = {};\r\nexport default function(state = initialCoronaData, action) {\r\n  // console.log(action);\r\n  switch (action.type) {\r\n    case \"DEATH_CASES\":\r\n      return { ...state, death: action.payload };\r\n    case \"CONFIRM_CASES\":\r\n      return { ...state, confirm: action.payload };\r\n    case \"RECOVERY_CASES\":\r\n      return { ...state, recovery: action.payload };\r\n    // case \"TIMELINE\":\r\n    //   return { ...state, timeline: action.payload };\r\n    // case \"DEATHREPORT\":\r\n    //   return { ...state, deathReport: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// import { CONFIRMED_CASE } from \"../actions/types.js\";\r\nconst initialTweets = {};\r\nexport default function(state = initialTweets, action) {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport coronaData from \"./corona_data_reducer\";\r\nimport tweets from \"./tweet_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  coronaData,\r\n  tweets\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport reducer from \"./reducers\";\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  ReduxThunk\n)(createStore);\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/loc.a2dd430f.svg\";"],"sourceRoot":""}