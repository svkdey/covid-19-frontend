{"version":3,"sources":["loc.svg","actions/corona_data_actions.js","actions/news.js","utils.js","components/partials/Header.js","components/Box.js","components/List.js","components/BarGraphComponent.js","components/Loading.js","components/Icon.js","components/MapGraph.js","components/Card.js","components/ListOfCard.js","App.js","reducers/corona_data_reducer.js","reducers/news.js","reducers/index.js","index.js"],"names":["module","exports","setDeathLoading","type","setConfirmLoading","setRecoveryLoading","setNewsLoading","groupByID","list","key","groupedMap","reduce","result","item","i","sum","sumList","forEach","latestTotal","Header","className","href","aria-hidden","Box","props","nameClass","total","List","confirm","death","recovery","confirmsum","deathsum","recoversum","data","temp","obj","push","createData","fetchHeading","style","height","ListGroup","length","map","ListGroupItem","name","fetchList","sort","a","b","Example","res","recoveryData","deathData","undefined","this","width","margin","top","right","left","bottom","strokeDasharray","dataKey","stackId","fill","PureComponent","Laoding","color","iconPerson","L","Icon","iconUrl","require","iconRetinaUrl","MapGraph","fetchMarker","points","point","Marker","icon","position","lat","lon","Popup","state","country","findByDataByLocation","lng","zoom","Map","center","TileLayer","attribution","url","React","Component","CustomCard","Card","CardImg","src","image","alt","CardBody","CardTitle","title","CardText","description","Button","outline","ListOfCard","news","App","loading","dispatch","axios","get","payload","console","log","articles","setState","groupByconfirmCase","groupBydeathCase","groupByrecoveryCase","deathLoading","confirmLoading","recoveryLoading","newsLoading","Loading","sumOfObject","highlightColor","Object","entries","slice","connect","ownProps","coronaData","initialCoronaData","initialNews","rootReducer","combineReducers","action","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.d93aa9cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loc.9920085f.svg\";","import axios from \"axios\";\r\n// var url = process.env.REACT_APP_API_URL;\r\nexport function deathCases() {\r\n  return async dispatch => {\r\n    try {\r\n      setDeathLoading();\r\n      const res = await axios.get(\r\n        \"https://cors-anywhere.herokuapp.com/http://covid19-dashboard-backend.herokuapp.com/corona-data-death\"\r\n      );\r\n      dispatch({\r\n        type: \"DEATH_CASES\",\r\n        payload: res\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\nexport const setDeathLoading = () => {\r\n  return {\r\n    type: \"SET_DEATH_LOADING\"\r\n  };\r\n};\r\nexport function confirmCases() {\r\n  return async dispatch => {\r\n    try {\r\n      setConfirmLoading();\r\n      const res = await axios.get(\r\n        \"https://cors-anywhere.herokuapp.com/https://covid19-dashboard-backend.herokuapp.com/corona-data-confirm\"\r\n      );\r\n      dispatch({\r\n        type: \"CONFIRM_CASES\",\r\n        payload: res\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\nexport const setConfirmLoading = () => {\r\n  return {\r\n    type: \"SET_CONFIRM_LOADING\"\r\n  };\r\n};\r\nexport function recoveryCases() {\r\n  return async dispatch => {\r\n    try {\r\n      setRecoveryLoading();\r\n      const res = await axios.get(\r\n        \"https://cors-anywhere.herokuapp.com/http://covid19-dashboard-backend.herokuapp.com/corona-data-recover\"\r\n      );\r\n      dispatch({\r\n        type: \"RECOVERY_CASES\",\r\n        payload: res\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\nexport const setRecoveryLoading = () => {\r\n  return {\r\n    type: \"SET_RECOVERY_LOADING\"\r\n  };\r\n};\r\n","import axios from \"axios\";\r\n//\r\n\r\nexport function fetchNews(key) {\r\n  return async dispatch => {\r\n    try {\r\n      setNewsLoading();\r\n      const res = await axios.get(\r\n        \"https://cors-anywhere.herokuapp.com/https://gnews.io/api/v3/search?q=covid&country=in&token=04a3f353028b831c4748c976380459d5\"\r\n      );\r\n      dispatch({\r\n        type: \"NEWS\",\r\n        payload: res.data.articles\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\nexport const setNewsLoading = () => {\r\n  return {\r\n    type: \"SET_NEWS_LOADING\"\r\n  };\r\n};\r\n","function isEmpty(obj) {\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nconst groupBy = (items, key) =>\r\n  items.reduce(\r\n    (result, item) => ({\r\n      ...result,\r\n      [item[key]]: [...(result[item[key]] || []), item]\r\n    }),\r\n    {}\r\n  );\r\nfunction groupByID(list) {\r\n  var groupedMap = list ? groupBy(list, \"country\") : [];\r\n  var result = {};\r\n  for (var i in groupedMap) {\r\n    var sum = sumList(groupedMap[i]);\r\n    result[i] = sum;\r\n  }\r\n  return result;\r\n}\r\nfunction sumList(list) {\r\n  var sum = 0;\r\n  list.forEach(i => {\r\n    sum += i.latestTotal;\r\n  });\r\n  return sum;\r\n}\r\n\r\nexport { isEmpty, groupBy, groupByID, sumList };\r\n","import React from \"react\";\r\n// import SwitchComponent from \"../switch/Switch\";\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"header-container-left\">COVID-19 Dashboard</div>\r\n      <div className=\"header-container-right\">\r\n        <a href=\"https://github.com/svkdey/covid-19-frontend\">\r\n          <i className=\"fa fa-github fa-2x\" aria-hidden=\"true\"></i>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Box(props) {\r\n  return (\r\n    <div className=\"box\">\r\n      <div className={props.nameClass}>{props.total}</div>\r\n      <div className=\"type\">{props.type}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Box from \"./Box\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nexport default function List(props) {\r\n  const { confirm, death, recovery, confirmsum, deathsum, recoversum } = props;\r\n  const createData = (confirm, recovery, death) => {\r\n    var temp = [];\r\n    for (var i in confirm) {\r\n      var obj = {};\r\n      obj[\"name\"] = i;\r\n      obj[\"confirm\"] = confirm[i];\r\n      obj[\"death\"] = death[i];\r\n      obj[\"recovery\"] = recovery[i];\r\n      temp.push(obj);\r\n    }\r\n    return temp;\r\n  };\r\n  const fetchHeading = (confirmsum, deathsum, recoversum) => {\r\n    return (\r\n      <div className=\"list-heading\">\r\n        <Box type={\"Confirmed\"} nameClass={\"confirmCls\"} total={confirmsum} />\r\n        <Box type={\"Deaths\"} nameClass={\"deadCls\"} total={deathsum} />\r\n        <Box type={\"Recoveries\"} nameClass={\"recoverdCls\"} total={recoversum} />\r\n      </div>\r\n    );\r\n  };\r\n  const fetchList = data => {\r\n    return (\r\n      <ListGroup>\r\n        {data.length > 0\r\n          ? data.map((item, key) => {\r\n              return (\r\n                <ListGroupItem key={key} className=\"list-main\">\r\n                  <div className=\"listgroupItem-heading \">{item.name}</div>\r\n                  <div className=\"listgroupItem\">\r\n                    <div className=\"listgroupItem-box\">{item.confirm}</div>\r\n                    <div className=\"listgroupItem-box\">{item.death}</div>\r\n                    <div className=\"listgroupItem-box\">{item.recovery}</div>\r\n                  </div>\r\n                </ListGroupItem>\r\n              );\r\n            })\r\n          : \"\"}\r\n      </ListGroup>\r\n    );\r\n  };\r\n  const data = createData(confirm, recovery, death);\r\n\r\n  return (\r\n    <div>\r\n      <div>{fetchHeading(confirmsum, deathsum, recoversum)}</div>\r\n      <div className=\"scroller\" style={{ height: props.height }}>\r\n        {fetchList(data.sort((a, b) => b.confirm - a.confirm))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nexport default class Example extends PureComponent {\r\n  createData = (confirm, recovery, death) => {\r\n    var res = [];\r\n    var temp = [];\r\n    confirm.forEach(item => {\r\n      var obj = {};\r\n      recovery.forEach(recoveryData => {\r\n        if (item[0] === recoveryData[0]) {\r\n          obj[\"name\"] = item[0];\r\n          obj[\"confirmed\"] = item[1];\r\n          obj[\"recover\"] = recoveryData[1];\r\n        }\r\n        death.forEach(deathData => {\r\n          if (item[0] === deathData[0]) {\r\n            obj[\"death\"] = deathData[1];\r\n          }\r\n        });\r\n      });\r\n\r\n      temp.push(obj);\r\n    });\r\n    temp.forEach(item => {\r\n      if (item.name !== undefined) {\r\n        res.push(item);\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n  render() {\r\n    var { confirm, recovery, death } = this.props;\r\n    const data = this.createData(confirm, recovery, death);\r\n    // console.log(data);\r\n    return (\r\n      <BarChart\r\n        width={900}\r\n        height={270}\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 20,\r\n          left: 20,\r\n          bottom: 20\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"10 10\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"confirmed\" stackId=\"a\" fill=\"#8884d8\" />\r\n        <Bar dataKey=\"recover\" stackId=\"a\" fill=\"#82ca9d\" />\r\n        <Bar dataKey=\"death\" stackId=\"a\" fill=\"red\" />\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Laoding = ({ type = \"bubbles\", color = \"white\" }) => (\r\n  <div className=\"loading\">\r\n    <ReactLoading type={type} color={color} height={\"20%\"} width={\"20%\"} />\r\n  </div>\r\n);\r\n\r\nexport default Laoding;\r\n","import L from \"leaflet\";\r\n\r\nconst iconPerson = new L.Icon({\r\n  iconUrl: require(\"../loc.svg\"),\r\n  iconRetinaUrl: require(\"../loc.svg\"),\r\n  className: \"mark\"\r\n});\r\n\r\nexport { iconPerson };\r\n","import React from \"react\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { iconPerson } from \"./Icon\";\r\nclass MapGraph extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      lat: 0,\r\n      lng: 0,\r\n      zoom: 2\r\n    };\r\n  }\r\n\r\n  fetchMarker = points => {\r\n    return points\r\n      ? points.map(\r\n          (point, key) => (\r\n            <Marker\r\n              icon={iconPerson}\r\n              className=\"mark\"\r\n              position={[point.lat, point.lon]}\r\n              key={key}\r\n            >\r\n              <Popup>\r\n                <div className=\"state\">\r\n                  Place :{point.state}\r\n                  {point.country && point.state ? \",\" : \"\"}\r\n                </div>\r\n                {point.country}\r\n                <div>\r\n                  Confirm:\r\n                  <span className=\"confirm\">\r\n                    {this.findByDataByLocation(\r\n                      this.props.data.confirm,\r\n                      point.lat,\r\n                      point.lon\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  Deaths:\r\n                  <span className=\"death\">\r\n                    {this.findByDataByLocation(\r\n                      this.props.data.death,\r\n                      point.lat,\r\n                      point.lon\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  Recovered:\r\n                  <span className=\"recover\">\r\n                    {this.findByDataByLocation(\r\n                      this.props.data.recovery,\r\n                      point.lat,\r\n                      point.lon\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              </Popup>\r\n            </Marker>\r\n          )\r\n          // console.log(point)\r\n        )\r\n      : \"\";\r\n  };\r\n  findByDataByLocation(obj, lat, lon) {\r\n    for (var i in obj) {\r\n      if (obj[i].lat === lat && obj[i].lon === lon) {\r\n        return obj[i].latestTotal;\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    // console.log(this.props.data);\r\n    var points = this.props.data.death;\r\n    // console.log(points);\r\n    return (\r\n      <Map center={[0, 0]} zoom={this.state.zoom}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {points ? this.fetchMarker(points) : \"\"}\r\n      </Map>\r\n    );\r\n  }\r\n}\r\nexport default MapGraph;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  CardTitle,\r\n  CardText,\r\n  CardImg\r\n} from \"reactstrap\";\r\n\r\nexport default function CustomCard(props) {\r\n  return (\r\n    <div className=\"card-wrapper\">\r\n      <Card className=\"card-w\">\r\n        <CardImg top width=\"100%\" src={props.data.image} alt=\"Card image cap\" />\r\n        <CardBody className=\"card-main\">\r\n          <CardTitle>\r\n            <strong>{props.data.title}</strong>\r\n          </CardTitle>\r\n          <CardText>\r\n            <small>{props.data.description} </small>\r\n          </CardText>\r\n          <CardText>\r\n            <Button outline color=\"danger\">\r\n              <a href={props.data.url}>Read Full content</a>\r\n            </Button>\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CustomCard from \"./Card\";\r\n\r\nexport default function ListOfCard(props) {\r\n  const fetchCards = news => {\r\n    return news !== undefined && news.length > 0\r\n      ? news.map((item, key) => {\r\n          return <CustomCard data={item} key={key} />;\r\n        })\r\n      : \"\";\r\n  };\r\n  return (\r\n    <div className=\"scroller-fix mobile-fix\" style={{ height: props.height }}>\r\n      {fetchCards(props.news)}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deathCases,\r\n  confirmCases,\r\n  recoveryCases\r\n} from \"./actions/corona_data_actions\";\r\nimport { fetchNews } from \"./actions/news\";\r\n\r\nimport { groupByID } from \"./utils\";\r\nimport Header from \"./components/partials/Header\";\r\nimport List from \"./components/List\";\r\nimport BarGraphComponent from \"./components/BarGraphComponent\";\r\nimport Loading from \"./components/Loading\";\r\nimport MapGraph from \"./components/MapGraph\";\r\nimport ListOfCard from \"./components/ListOfCard\";\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    var key = process.env.REACT_APP_API_NEWS_key;\r\n    this.props.dispatch(deathCases());\r\n    this.props.dispatch(confirmCases());\r\n    this.props.dispatch(recoveryCases());\r\n    this.props.dispatch(fetchNews(key));\r\n    this.setState({ loading: false });\r\n  }\r\n  sumOfObject(obj) {\r\n    var sum = 0;\r\n    if (obj) {\r\n      for (var i in obj) {\r\n        sum += obj[i];\r\n      }\r\n    }\r\n    return sum;\r\n  }\r\n  render() {\r\n    var news = this.props.news.news;\r\n    var deathData = this.props;\r\n    var groupByconfirmCase = groupByID(this.props.confirm);\r\n    var groupBydeathCase = groupByID(this.props.death);\r\n    var groupByrecoveryCase = groupByID(this.props.recovery);\r\n    const {\r\n      deathLoading,\r\n      confirmLoading,\r\n      recoveryLoading,\r\n      newsLoading\r\n    } = this.props;\r\n    if (deathLoading || confirmLoading || recoveryLoading || newsLoading) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div className=\"wrapper\">\r\n          <div>\r\n            <Header />\r\n          </div>\r\n          <div className=\"main-container\">\r\n            <div className=\"left-20\">\r\n              <List\r\n                nameClass=\"h-2\"\r\n                confirm={groupByconfirmCase}\r\n                confirmsum={this.sumOfObject(groupByconfirmCase)}\r\n                death={groupBydeathCase}\r\n                deathsum={this.sumOfObject(groupBydeathCase)}\r\n                recovery={groupByrecoveryCase}\r\n                recoversum={this.sumOfObject(groupByrecoveryCase)}\r\n                height=\"82vh\"\r\n                highlightColor={\"blue\"}\r\n              />\r\n            </div>\r\n            <div className=\"mid-60\">\r\n              <div className=\"upper-60\">\r\n                <MapGraph data={deathData} />\r\n              </div>\r\n              <div className=\"lower-40\">\r\n                <BarGraphComponent\r\n                  confirm={Object.entries(groupByconfirmCase)\r\n                    .sort((a, b) => b[1] - a[1])\r\n                    .slice(0, 10)}\r\n                  death={Object.entries(groupBydeathCase)\r\n                    .sort((a, b) => b[1] - a[1])\r\n                    .slice(0, 15)}\r\n                  recovery={Object.entries(groupByrecoveryCase)\r\n                    .sort((a, b) => b[1] - a[1])\r\n                    .slice(0, 15)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"right-20\">\r\n              <ListOfCard news={news} height=\"85vh\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n   \r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  return {\r\n    death: state.coronaData.death,\r\n    confirm: state.coronaData.confirm,\r\n    recovery: state.coronaData.recovery,\r\n    news: state.news,\r\n    deathLoading: state.coronaData.deathLoading,\r\n    confirmLoading: state.coronaData.confirmLoading,\r\n    recoveryLoading: state.coronaData.recoveryLoading,\r\n    newsLoading: state.news.newsLoading\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(App);\r\n","const initialCoronaData = {\r\n  deathLoading: true,\r\n  confirmLoading: true,\r\n  recoveryLoading: true\r\n};\r\nexport default function(state = initialCoronaData, action) {\r\n  // console.log(action);\r\n  switch (action.type) {\r\n    case \"DEATH_CASES\":\r\n      return { ...state, death: action.payload.data, deathLoading: false };\r\n    case \"CONFIRM_CASES\":\r\n      return { ...state, confirm: action.payload.data, confirmLoading: false };\r\n    case \"RECOVERY_CASES\":\r\n      return {\r\n        ...state,\r\n        recovery: action.payload.data,\r\n        recoveryLoading: false\r\n      };\r\n    case \"SET_DEATH_LOADING\":\r\n      return {\r\n        ...state,\r\n        deathLoading: true\r\n      };\r\n    case \"SET_CONFIRM_LOADING\":\r\n      return {\r\n        ...state,\r\n        confirmLoading: true\r\n      };\r\n    case \"SET_RECOVERY_LOADING\":\r\n      return {\r\n        ...state,\r\n        recoveryLoading: true\r\n      };\r\n    // case \"TIMELINE\":\r\n    //   return { ...state, timeline: action.payload };\r\n    // case \"DEATHREPORT\":\r\n    //   return { ...state, deathReport: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// import { CONFIRMED_CASE } from \"../actions/types.js\";\r\nconst initialNews = {\r\n  newsLoading: true\r\n};\r\nexport default function(state = initialNews, action) {\r\n  switch (action.type) {\r\n    case \"NEWS\":\r\n      return { ...state, news: action.payload, newsLoading: false };\r\n    case \"SET_NEWS_LOADING\":\r\n      return {\r\n        ...state,\r\n        newsLoading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport coronaData from \"./corona_data_reducer\";\r\nimport news from \"./news\";\r\n\r\nconst rootReducer = combineReducers({\r\n  coronaData,\r\n  news\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport reducer from \"./reducers\";\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  promiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\nReactDOM.render(\r\n  <Provider\r\n    store={createStoreWithMiddleware(\r\n      reducer,\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )}\r\n  >\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}